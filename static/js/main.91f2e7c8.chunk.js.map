{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","dispatch","a","streams","get","response","type","payload","data","StreamForm","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","this","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamCreate","createStream","connect","getState","userId","auth","post","history","push","StreamEdit","editStream","match","params","stream","initialValues","_","pick","state","ownProps","patch","Modal","ReactDom","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","to","renderContent","renderActions","delete","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","Object","values","StreamShow","videoRef","createRef","buildPlayer","player","destroy","flv","createPlayer","url","attachMediaElement","current","load","ref","width","controls","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","path","exact","INITIAL_STATE","combineReducers","action","formReducer","mapKeys","omit","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.91f2e7c8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create ({\r\n  baseURL: 'http://localhost:3001'\r\n})","import { createBrowserHistory } from 'history';\r\n\r\n\r\nexport default createBrowserHistory();","import streams from '../apis/streams';\r\nimport history from '../history';\r\nimport { \r\n  SIGN_IN, \r\n  SIGN_OUT, \r\n  CREATE_STREAM,\r\n  FETCH_STREAMS,\r\n  FETCH_STREAM, \r\n  DELETE_STREAM,\r\n  EDIT_STREAM\r\n} from './types';\r\n\r\nexport const signIn = (userId) => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch, getState)  => {\r\n  const { userId } = getState().auth;\r\n  const response = await streams.post('/streams', {...formValues, userId });\r\n\r\n  dispatch({ \r\n    type : CREATE_STREAM,\r\n    payload: response.data\r\n  });\r\n\r\n  history.push('/')\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n  const response = await streams.get('/streams');\r\n\r\n  dispatch({ \r\n    type: FETCH_STREAMS,\r\n    payload: response.data\r\n  })\r\n};\r\n\r\nexport const fetchStream = (id) => async dispatch => {\r\n  const response = await streams.get(`/streams/${id}`);\r\n\r\n  dispatch({\r\n    type: FETCH_STREAM,\r\n    payload: response.data\r\n  })\r\n}\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n  const response = await streams.patch(`/streams/${id}`, formValues);\r\n\r\n  dispatch({\r\n    type: EDIT_STREAM,\r\n    payload: response.data\r\n  })\r\n  history.push('/')\r\n}\r\n\r\nexport const deleteStream = (id) => async dispatch => {\r\n  await streams.delete(`/streams/${id}`);\r\n\r\n  dispatch({\r\n    type: DELETE_STREAM,\r\n    payload: id\r\n  });\r\n  history.push('/');\r\n}","export const SIGN_IN  = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const CREATE_STREAM = 'CREATE_STREAM';\r\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\r\nexport const FETCH_STREAM  = 'FETCH_STREAM';\r\nexport const DELETE_STREAM = 'DELETE_STREAM';\r\nexport const EDIT_STREAM   = 'EDIT_STREAM';","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamForm extends React.Component {\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\"> {error} </div>\r\n        </div>\r\n      )\r\n    };\r\n  };\r\n\r\n  renderInput = ( {input, label, meta} ) => {\r\n    const className= `field ${meta.error && meta.touched ? 'error': ''}`\r\n    return (\r\n      <div className={className}>\r\n      <label>{label}</label>\r\n      <input {...input} autoComplete=\"off\"/>\r\n      {this.renderError(meta)}\r\n      </div>\r\n    )\r\n  };\r\n  \r\n\r\n  onSubmit = formValues => {\r\n    this.props.onSubmit(formValues);\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n          <Field name=\"title\" \r\n          component={this.renderInput}\r\n          label=\"Enter Title\"\r\n          />\r\n          <Field name=\"description\" \r\n          component={this.renderInput}\r\n          label=\"Enter Description\"\r\n          />\r\n        <button className=\"ui button primary\">Submit</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\n\r\nconst validate = formValues => {\r\n  const errors = {};\r\n\r\n  if(!formValues.title) {\r\n    errors.title= \"You must enter a title\"\r\n  }\r\n\r\n  if(!formValues.description) {\r\n    errors.description = \" you must enter a description\"\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'streamFrom',\r\n  validate\r\n})(StreamForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamCreate extends React.Component {\r\n\r\n  onSubmit = formValues => {\r\n    this.props.createStream(formValues);\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3> Create a Stream</h3>\r\n        <StreamForm onSubmit={this.onSubmit} />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default connect( null, { createStream } )(StreamCreate);","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream, editStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamEdit extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id)\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.editStream(this.props.match.params.id, formValues)\r\n  };\r\n  \r\n  render() {\r\n    if(!this.props.stream) {\r\n      return <div> Loading ...</div>;\r\n    } \r\n\r\n    return (\r\n      <div>\r\n        <h3>Edit a Stream</h3>\r\n        <StreamForm \r\n        initialValues= {_.pick(this.props.stream, 'title', 'description')}\r\n        onSubmit={this.onSubmit}  />\r\n      </div>\r\n    )\r\n  };\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id] };\r\n};\r\n\r\n\r\nexport default connect( \r\n  mapStateToProps, \r\n  { fetchStream, editStream} )\r\n  (StreamEdit);","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\n\r\nconst Modal = props => {\r\n  return ReactDom.createPortal(\r\n    <div onClick={props.onDismiss} className =\"ui dimmer modals visible active\">\r\n      <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n        <div className=\"header\"> {props.title} </div>\r\n        <div className=\"content\"> {props.content} </div>\r\n        <div className=\"actions\">\r\n          {props.actions}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n\r\n    document.querySelector('#modal')\r\n  )\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../Modal';\r\nimport history from '../../history';\r\nimport { fetchStream, deleteStream } from '../../actions';\r\n\r\nclass StreamDelete extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStream(this.props.match.params.id);\r\n  }\r\n\r\n  renderActions() {\r\n    const {id} = this.props.match.params;\r\n      return (\r\n        <React.Fragment>\r\n          <button onClick={() => this.props.deleteStream(id)} className=\"ui button negative\">Delete</button>\r\n          <Link to=\"/\" className=\"ui button\">Cancel</Link>\r\n        </React.Fragment>\r\n      );\r\n  }\r\n\r\n  renderContent() {\r\n    if(!this.props.stream) {\r\n      return ' Are you sure you want to delete this stream?'\r\n    }\r\n\r\n    return `Are you sure you want to delete the stream with title: ${this.props.stream.title}`\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Modal \r\n      title=\"Delete Stream\"\r\n      content={this.renderContent()}\r\n      actions={this.renderActions()}\r\n      onDismiss={() => history.push('/')}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id]}\r\n}\r\n\r\nexport default connect( mapStateToProps, { fetchStream, deleteStream })(StreamDelete);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchStreams();\r\n  };\r\n\r\n  renderAdmin(stream) {\r\n    if (stream.userId === this.props.currentUserId) {\r\n      return (\r\n        <div className=\"right floated content \">\r\n          <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\r\n          Edit\r\n          </Link>\r\n          <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">\r\n          Delete\r\n          </Link>\r\n        </div>\r\n      );\r\n    };\r\n  };\r\n\r\n  renderList() {\r\n    return this.props.streams.map(stream => {\r\n      return (\r\n        <div className=\"item\" key={stream.id}>\r\n          {this.renderAdmin(stream)}\r\n          <i className=\"large middle aligned icon camera\" />\r\n          <div className=\"content\">\r\n            <Link to={`/streams/${stream.id}`} className=\"header\" >\r\n            {stream.title}\r\n            </Link>\r\n            <div className=\"description\">\r\n            {stream.description}\r\n            </div>            \r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    });\r\n  };\r\n\r\n  renderCreate() {\r\n    if ( this.props.isSignedIn) {\r\n      return (\r\n        <div style={{ textAlign: 'right' }}>\r\n          <Link to=\"/streams/new\" className=\"ui button primary\">\r\n            Create Stream\r\n          </Link>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2> Streams </h2>\r\n        <div className=\"ui celled list\">\r\n        {this.renderList()}\r\n        </div>\r\n        {this.renderCreate()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { \r\n    streams: Object.values(state.streams),\r\n    currentUserId: state.auth.userId,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);","import React from 'react';\r\nimport flv from 'flv.js';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStream } from '../../actions';\r\n\r\n\r\nclass StreamShow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.videoRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {id} = this.props.match.params;\r\n    this.props.fetchStream(id);\r\n    this.buildPlayer();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.buildPlayer();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.player.destroy();\r\n  }\r\n\r\n  buildPlayer() {\r\n    if(this.player || !this.props.stream) {\r\n      return;\r\n    };\r\n\r\n      const {id} = this.props.match.params;\r\n      this.player = flv.createPlayer({\r\n        type: 'flv',\r\n        url: `http://localhost:8000/live/${id}.flv`\r\n      });\r\n      this.player.attachMediaElement(this.videoRef.current);\r\n      this.player.load();\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.stream) {\r\n      return <div> Loading ...</div>\r\n    }\r\n\r\n    const { title, description} = this.props.stream;\r\n\r\n    return (\r\n      <div>\r\n        <video ref={this.videoRef} style={{ width: '100%'}} controls />\r\n        <h1> {title}</h1>\r\n        <h2> {description}</h2>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { stream: state.streams[ownProps.match.params.id]}\r\n}\r\n\r\nexport default connect( mapStateToProps, { fetchStream })(StreamShow);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    window.gapi.load('client:auth2', () => {\r\n      window.gapi.client.init({\r\n        clientId: '747609537082-dhlrnot5aqqb5gsg7rue5o4g81af2s8o.apps.googleusercontent.com',\r\n        scope:'email'\r\n      }).then(()=> {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n      });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedIn) => {\r\n    if(isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getId());\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  }\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  }\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  }\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return ( \r\n        <button onClick={this.onSignOutClick} className=\"ui red google button\">\r\n        <i className=\"google icon\" />\r\n        Sign Out\r\n      </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button onClick={this.onSignInClick} className=\"ui red google button\">\r\n          <i className=\"google icon\" />\r\n          Sign In with Google\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderAuthButton()}</div>\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { isSignedIn: state.auth.isSignedIn};\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,  \r\n  {signIn, signOut}\r\n  )(GoogleAuth);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nconst Header = () => {\r\n  return (\r\n      <div className=\"ui secondary pointing menu\">\r\n        <Link to=\"/\" className=\"item\">\r\n          Streamy\r\n        </Link>\r\n        <div className=\"right menu\">\r\n          <Link to=\"/\" className=\"item\">\r\n          ALL Streams\r\n          </Link>\r\n          <GoogleAuth /> \r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Router, Route, Switch} from 'react-router-dom';\r\nimport StreamCreate from './streams/StreamCreate';\r\nimport StreamEdit from './streams/StreamEdit';\r\nimport StreamDelete from './streams/StreamDelete';\r\nimport StreamList from './streams/StreamList';\r\nimport StreamShow from './streams/StreamShow';\r\nimport Header from './Header';\r\nimport history from '../history';\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n\r\n      <Router history= { history }>\r\n        <div>\r\n            <Header />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={StreamList} />\r\n            <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n            <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\r\n            <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\r\n            <Route path=\"/streams/:id\" exact component={StreamShow} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import { SIGN_IN, SIGN_OUT} from '../actions/types';\r\n\r\nconst INITIAL_STATE = { \r\n    isSignedIn: null,\r\n    userId: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userId: action.payload}\r\n    case SIGN_OUT:\r\n      return { ...state,isSignedIn: false, userId: null};\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport streamReducer from './streamReducer';\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  streams: streamReducer\r\n});","import _ from 'lodash';\r\nimport {\r\n  FETCH_STREAM,\r\n  FETCH_STREAMS,\r\n  CREATE_STREAM,\r\n  EDIT_STREAM,\r\n  DELETE_STREAM\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STREAMS:\r\n      return {...state,..._.mapKeys(action.payload, 'id')}\r\n    case FETCH_STREAM:\r\n      return {...state, [action.payload.id]: action.payload }\r\n    case CREATE_STREAM:\r\n      return {...state, [action.payload.id]: action.payload }\r\n    case EDIT_STREAM:\r\n      return {...state, [action.payload.id]: action.payload }\r\n    case DELETE_STREAM:\r\n      return _.omit(state, action.payload)\r\n      default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore( \r\n  reducers, \r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n  );\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);"],"sourceRoot":""}